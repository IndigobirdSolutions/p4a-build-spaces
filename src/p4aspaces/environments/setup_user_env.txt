
# Prepare user environment:
RUN apt install -y psmisc bash sudo
RUN /bin/echo -e '\nBASH_ENV="~/.additional_env"\n' >> /etc/environment
ENV BASH_ENV="~/.additional_env"
RUN mkdir -p /home/userhome/
RUN mkdir -p /p4a
{PREPARE_USER}

# Workspace folder (if used, otherwise the following line will be blank):
{WORKSPACE_VOLUME}

# Volume for output:
VOLUME /home/userhome/output

# Set start directory:
WORKDIR {START_DIR}

RUN chown -R builduser /ndk
RUN chown -R builduser /sdk-install
RUN chown -R builduser /p4a

# Drop privileges:
{DROP_TO_USER}

# Install shared user packages:
{INSTALL_SHARED_PACKAGES_USER}

# Get the kivy test app:
RUN cd /p4a && git clone https://github.com/IndigobirdSolutions/python-for-android .

# Final command line preparation:
RUN echo '{LAUNCH_CMD}' > /tmp/launchcmd.txt
RUN /bin/echo -e '#!/usr/bin/python3\n\
import json\n\
import os\n\
print("echo \"\"")\n\
init_file = ""\n\

with open("/tmp/launchcmd.txt", "r") as f:\n\
    import shlex\n\
    args = shlex.split(f.read().strip())\n\
    print("CMD=()")\n\
    i = -1\n\
    for arg in args:\n\
        i += 1\n\
        print("CMD[" + str(i) + "]=" + shlex.quote(arg))\n\
vars = ["ANDROIDAP='$ANDROIDAPI'",\n\
    "ANDROIDNDKVER='$NDKVER'",\n\
    "NDKAPI='$NDKAPI'",\n\
    "HOME=/home/userhome",\n\
    "GRADLE_OPTS=\"-Xms1724m -Xmx5048m -Dorg.gradle.jvmargs='"'"'-Xms1724m -Xmx5048m'"'"'\"",\n\
    "JAVA_OPTS=\"-Xms1724m -Xmx5048m\"",\n\
    "TESTPATH=\"$PATH:/home/userhome/.local/bin\"",\n\
    "PATH=\"$PATH:/home/userhome/.local/bin\"",\n\
    "ANDROIDSDK=/sdk-install/ ANDROIDNDK=\"'$NDKDIR'\"",\n\
    ]\n\
with open(os.path.expanduser("~/.pam_environment"), "a", encoding="utf-8") as f1:\n\
    f1.write("\\n" + "\\n".join([\n\
        var.partition("=")[0] + " DEFAULT=" +\n\
        var.partition("=")[2] for var in vars]))\n\
with open(os.path.expanduser("~/.bash_profile"), "a", encoding="utf-8") as f2:\n\
    f2.write("\\n" + init_file + "\\n")\n\
    f2.write("\\n" + "\\nexport ".join(vars) + "\\n")\n\
with open(os.path.expanduser("~/.profile"), "a", encoding="utf-8") as f2:\n\
    f2.write("\\n" + "\\nexport ".join(vars) + "\\n")\n\
with open(os.path.expanduser("~/.bashrc"), "a", encoding="utf-8") as f2:\n\
    f2.write("\\n" + init_file + "\\n")\n\
    f2.write("\\n" + "\\nexport ".join(vars) + "\\n")\n\
with open(os.path.expanduser("~/.additional_env"), "a", encoding="utf-8") as f3:\n\
    f3.write("\\n" + "\\nexport ".join(vars) + "\\n")' > /tmp/cmdline.py

# Actual launch script:
RUN /bin/echo -e '#!/bin/sh\n\
python3 /tmp/cmdline.py > /tmp/launch-prepare.sh\n\
source /tmp/launch-prepare.sh\n\
exec -- ${CMD[@]}' > /tmp/launch.sh

ENV LC_ALL C.UTF-8
ENV USE_SDK_WRAPPER 1

CMD ["bash", "/tmp/launch.sh"]

